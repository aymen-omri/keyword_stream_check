version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP protocol
      - "15672:15672"  # RabbitMQ management web interface
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s  # Run the healthcheck every 30 seconds
      retries: 5  # Retry 5 times before marking as unhealthy
      start_period: 30s  # Wait for 30 seconds before the first healthcheck
      timeout: 30s  # Timeout for each healthcheck
    networks:
      - app-network

  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"  # Expose Flask app on port 5000
    environment:
      - FLASK_ENV=production
      - RABBITMQ_HOST=rabbitmq  # Connect Flask app to RabbitMQ
    depends_on:
      rabbitmq:
        condition: service_healthy  # Wait for RabbitMQ to be healthy before starting
    networks:
      - app-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      replicas: 3  # Deploy 3 worker replicas
    environment:
      - RABBITMQ_HOST=rabbitmq  # Connect worker to RabbitMQ
    depends_on:
      rabbitmq:
        condition: service_healthy  # Wait for RabbitMQ to be healthy before starting
    networks:
    - app-network

networks:
  app-network:
    driver: bridge
